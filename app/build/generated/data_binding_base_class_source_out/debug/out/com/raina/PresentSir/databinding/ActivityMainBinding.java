// Generated by view binder compiler. Do not edit!
package com.raina.PresentSir.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.raina.PresentSir.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button Upload;

  @NonNull
  public final Button addFace;

  @NonNull
  public final TextView addInfo;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final Button cameraSwitch;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final ConstraintLayout coordinatorLayout;

  @NonNull
  public final ImageView defaultImg;

  @NonNull
  public final ImageView facePreview;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final PreviewView preview;

  @NonNull
  public final Button recognize;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull Button Upload,
      @NonNull Button addFace, @NonNull TextView addInfo, @NonNull AppBarLayout appbar,
      @NonNull Button cameraSwitch, @NonNull FrameLayout container,
      @NonNull ConstraintLayout coordinatorLayout, @NonNull ImageView defaultImg,
      @NonNull ImageView facePreview, @NonNull LinearLayout linearLayout,
      @NonNull PreviewView preview, @NonNull Button recognize, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.Upload = Upload;
    this.addFace = addFace;
    this.addInfo = addInfo;
    this.appbar = appbar;
    this.cameraSwitch = cameraSwitch;
    this.container = container;
    this.coordinatorLayout = coordinatorLayout;
    this.defaultImg = defaultImg;
    this.facePreview = facePreview;
    this.linearLayout = linearLayout;
    this.preview = preview;
    this.recognize = recognize;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Upload;
      Button Upload = ViewBindings.findChildViewById(rootView, id);
      if (Upload == null) {
        break missingId;
      }

      id = R.id.add_face;
      Button addFace = ViewBindings.findChildViewById(rootView, id);
      if (addFace == null) {
        break missingId;
      }

      id = R.id.addInfo;
      TextView addInfo = ViewBindings.findChildViewById(rootView, id);
      if (addInfo == null) {
        break missingId;
      }

      id = R.id.appbar;
      AppBarLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.camera_switch;
      Button cameraSwitch = ViewBindings.findChildViewById(rootView, id);
      if (cameraSwitch == null) {
        break missingId;
      }

      id = R.id.container;
      FrameLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.coordinatorLayout;
      ConstraintLayout coordinatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (coordinatorLayout == null) {
        break missingId;
      }

      id = R.id.defaultImg;
      ImageView defaultImg = ViewBindings.findChildViewById(rootView, id);
      if (defaultImg == null) {
        break missingId;
      }

      id = R.id.face_preview;
      ImageView facePreview = ViewBindings.findChildViewById(rootView, id);
      if (facePreview == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.preview;
      PreviewView preview = ViewBindings.findChildViewById(rootView, id);
      if (preview == null) {
        break missingId;
      }

      id = R.id.recognize;
      Button recognize = ViewBindings.findChildViewById(rootView, id);
      if (recognize == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, Upload, addFace, addInfo, appbar,
          cameraSwitch, container, coordinatorLayout, defaultImg, facePreview, linearLayout,
          preview, recognize, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
